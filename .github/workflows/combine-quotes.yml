name: Combine Quotes

on:
  push:
    paths:
      - 'assets/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  combine:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Combine, deduplicate, and convert to JSON
        id: combine_quotes
        run: |
          mkdir -p data

          ID=1
          echo "[" > data/quotes.json
          first=1
          tmpfile=$(mktemp)
          dupelog="data/duplicates.log"
          > "$dupelog"

          declare -A seen
          declare -A id_map
          duplicate_count=0
          total_before=0

          for file in assets/*.txt; do
            while IFS= read -r line; do
              [ -z "$line" ] && continue
              total_before=$((total_before + 1))

              IFS='|' read -r _ from quote <<< "$line"
              key="${from}|${quote}"

              newid=$(printf "%06d" $ID)

              if [[ -n "${seen["$key"]}" ]]; then
                duplicate_count=$((duplicate_count + 1))
                echo "Duplicate ID: $newid (same as ID: ${id_map["$key"]})" >> "$dupelog"
                ID=$((ID + 1))
                continue
              fi

              seen["$key"]=1
              id_map["$key"]=$newid

              from_escaped=$(echo "$from" | sed 's/"/\\"/g')
              quote_escaped=$(echo "$quote" | sed 's/"/\\"/g')

              [ $first -eq 0 ] && echo "," >> data/quotes.json

              echo "  {\"id\": \"$newid\", \"from\": \"$from_escaped\", \"quote\": \"$quote_escaped\"}" >> data/quotes.json

              ID=$((ID + 1))
              first=0
            done < "$file"
          done

          echo "]" >> data/quotes.json

          jq -c . data/quotes.json > data/quotes.min.json

          echo "total_quotes=$((ID - 1 - duplicate_count))" >> $GITHUB_OUTPUT
          echo "duplicate_count=$duplicate_count" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push if changed
        run: |
          if [[ `git status --porcelain` ]]; then
            git add data/quotes.json data/quotes.min.json

            if [[ -f "data/duplicates.log" ]]; then
              git add data/duplicates.log
              git commit -F - <<EOF
[Update] Total: ${{ steps.combine_quotes.outputs.total_quotes }} | Duplicates Removed: ${{ steps.combine_quotes.outputs.duplicate_count }}

Duplicate log:
$(cat data/duplicates.log)
EOF
            else
              git commit -m "[Update] Total: ${{ steps.combine_quotes.outputs.total_quotes }} | No Duplicates Found"
            fi

            git push
          else
            echo "No changes to commit"
          fi
