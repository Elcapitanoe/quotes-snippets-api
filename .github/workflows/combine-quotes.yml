name: Combine Quotes

on:
  push:
    paths:
      - 'assets/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  combine:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Combine, deduplicate, and convert to JSON
        id: combine_quotes
        run: |
          mkdir -p data

          ID=1
          echo "[" > data/quotes.json
          first=1
          datalog="data/data.log"
          > "$datalog"

          declare -A seen_quotes
          declare -A quote_ids

          duplicate_count=0
          total_count=0
          saved_count=0

          duplicates=()

          for file in assets/*.txt; do
            while IFS= read -r line; do
              [ -z "$line" ] && continue
              total_count=$((total_count + 1))

              IFS='|' read -r original_id from quote <<< "$line"
              key="$quote"

              if [[ -n "${seen_quotes["$key"]}" ]]; then
                duplicate_count=$((duplicate_count + 1))
                duplicates+=("- [$original_id] $quote")
                continue
              fi

              seen_quotes["$key"]=1
              quote_ids["$key"]=$original_id

              new_id=$(printf "%06d" $ID)
              from_escaped=$(echo "$from" | sed 's/"/\\"/g')
              quote_escaped=$(echo "$quote" | sed 's/"/\\"/g')

              [ $first -eq 0 ] && echo "," >> data/quotes.json
              echo "  {\"id\": \"$new_id\", \"from\": \"$from_escaped\", \"quote\": \"$quote_escaped\"}" >> data/quotes.json

              ID=$((ID + 1))
              saved_count=$((saved_count + 1))
              first=0
            done < "$file"
          done

          echo "]" >> data/quotes.json
          jq -c . data/quotes.json > data/quotes.min.json

          # Write to data.log
          echo "Total Raw Entries: $total_count" >> "$datalog"
          echo "Unique Quotes Saved: $saved_count" >> "$datalog"
          echo "Duplicates Removed: $duplicate_count" >> "$datalog"
          echo "" >> "$datalog"

          if (( duplicate_count > 0 )); then
            echo "List of Duplicates:" >> "$datalog"
            printf '%s\n' "${duplicates[@]}" >> "$datalog"
          fi

          echo "total_quotes=$saved_count" >> $GITHUB_OUTPUT
          echo "duplicate_count=$duplicate_count" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push if changed
        run: |
          if [[ `git status --porcelain` ]]; then
            git add data/quotes.json data/quotes.min.json data/data.log

            TOTAL=${{ steps.combine_quotes.outputs.total_quotes }}
            DUPS=${{ steps.combine_quotes.outputs.duplicate_count }}

            git commit -m "[Update] Total: $TOTAL | Duplicates Removed: $DUPS"
            git push
          else
            echo "No changes to commit"
          fi
